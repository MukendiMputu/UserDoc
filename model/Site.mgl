import "model/Page.mgl" as importedPage

id info.scce.cinco.product.site
stylePath "model/Site.style"


/* 
 * All the model elements that will contain
 * the configuration for the target web site.
 * 
 * e.g. URL, username, password, etc.
 * */
@generatable("info.scce.cinco.product.userdocumentation.codegen.Generate", "/src/")
graphModel SiteConfigurationGraphModel {
	iconPath "icons/16/gear_16.png"
	diagramExtension "config"
	containableElements(*)
	attr EString as modelName := "Site"
}

/* Basic URL node */
@icon("icons/16/url_16.png")
node Url {
	style url("URL: ", "${content}")
	attr EString as content := ""
}

/* The Domain node is suppose to contain
 * the site's reverse domain for defining packages;
 * this node might be reference in other MGLs.
 */
@icon("icons/16/domain_16.png")
node Domain{
	style url("Reverse domain: ", "${content}")
	attr EString as content := ""
	
}

/* Email input node*/
@icon("icons/16/email_16.png")
node Email {
	style input("Email: ", "${content}")
	attr EString as content := ""
}

/* Username input node
 * Note: Might be redundant, since many sites accept
 * both email and user name in the same input field.
 */
@icon("icons/16/username_16.png")
node Username {
	style input("Username", "${content}")
	attr EString as content := ""
}

/* Password input node*/
@icon("icons/16/password_16.png")
node Password {
	style input("Password", "${content}")
	attr EString as content := ""
	
}
/* To model all the pages the web site
 * might contain.
  */
@icon("icons/16/page_16.png")
node Page {
	style page("${subPage.name}: ", "${subPage.URL}")
	prime importedPage::PageGraphModel as subPage
}