id info.scce.cinco.product.userdoc.mglid
stylePath "model/UserDoc.style"

@primeviewer
@generatable("info.scce.cinco.product.userdoc.codegen.Generate", "/src/")
graphModel UserDocGraphModel {
	iconPath "icons/UserDoc.png"
	diagramExtension "docu"
	containableElements(*)
	attr EString as name
}

/*---------------- TEMPLATES ELEMENTS ------------------------ */
node Start {
	style start
	attr EBoolean as highlighted
	outgoingEdges (Transition[1,1])
}

node End{
	style end
	attr EBoolean as highlighted
	incomingEdges ({Transition,LabeledTransition}[1,*])
}

node Activity {
	style blueTextRectangle("${name}")
	attr EBoolean as highlighted
	attr EString as name
	attr EString as description
	incomingEdges (*[1,*])
	outgoingEdges (LabeledTransition[1,*])
}

/*---------------- STRUCTURAL ELEMENTS ------------------------ */
@palette("Structural Elements")
node Navigation {
	style navigation("${url}")
	attr EBoolean as highlighted
	attr EString as url
	incomingEdges (*[1,*])
	outgoingEdges ({Transition, LabeledTransition}[1,*])
}

@icon("icons/Screenshot-sm.png")
node Screenshot {
	style screenshot
	attr EBoolean as highlighted
	incomingEdges (*[1,*])
	outgoingEdges ({Transition, LabeledTransition}[1,*])
}

node Description {
	style description("${content}")
	attr EBoolean as highlighted
	attr EString as content
	attr Screenshot as NodeReference
	outgoingEdges (CommentTransition[1,*])
}

@palette("Container Elements")
container Div {
	style grayContainer
	attr EBoolean as highlighted
	attr EString as tagName
	containableElements(*)
	incomingEdges (*[1,*])
	outgoingEdges ({Transition, LabeledTransition}[1,*])
}

@palette("Structural Elements")
node H {
	style textBlock("${content}")
	attr EBoolean as highlighted
	attr EInt as ranking
	attr EString as selector
	attr EString as value
	attr EString as content
}

@palette("Structural Elements")
node P {
	style textBlock("${content}")
	attr EString as selector
	attr EString as value
	attr EString as content
	attr EBoolean as highlighted
}

@palette("Structural Elements")
node Span {
	style textBlock("${content}")
	attr EString as selector
	attr EString as value
	attr EString as content
	attr EBoolean as highlighted
}

@palette("Structural Elements")
node Img {
	style img("${alt}")
	attr EString as selector
	attr EString as value
	attr EString as alt
	attr EBoolean as highlighted
}

@palette("Container Elements")
container Form {
	style sectionContainer("")
	attr EBoolean as highlighted
	attr EString as action
	attr EString as method
	attr Input as field [0,*]
	containableElements (Input, Button, Div, P, H, Span)
}

node Input {
	style input("${content}","${selector}","value")
	attr EBoolean as highlighted
	attr EString as selector
	attr EString as value
	attr EString as content
	incomingEdges (*[1,*])
	outgoingEdges ({Transition, LabeledTransition}[1,*])
}

@palette("Structural Elements")
node Textarea extends Input {
	style input("${content}","${selector}","value")
	incomingEdges (*[1,*])
	outgoingEdges ({Transition, LabeledTransition}[1,*])
}

@palette("Structural Elements")
node Button {
	style button("${content}","${selector}","${value}", "${_type}")
	attr EBoolean as highlighted
	attr EString as content
	attr EString as selector
	attr EString as value
	attr ButtonType as _type
	incomingEdges (*[1,*])
	outgoingEdges ({Transition, LabeledTransition}[1,*])
}

enum ButtonType {
	submit delete button reset
}

@palette("Container Elements")
container Section {
	style sectionContainer("${title}")
	attr EBoolean as highlighted
	attr EString as title
	incomingEdges (*[1,*])
	outgoingEdges ({Transition, LabeledTransition}[1,*])
}

/*---------------- CONNECTING ELEMENTS ------------------------ */
edge LabeledTransition {
	style labeledArrow("${label}")
	
	attr EString as label
}

edge CommentTransition {
	style triangleArrow
}

edge Transition {
	style simpleArrow
}
