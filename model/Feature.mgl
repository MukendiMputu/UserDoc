import "model/Doc.mgl" as docMgl
id info.scce.cinco.product.features.main
stylePath "model/Feature.style"

@primeviewer
@mcam("check")
@generatable("info.scce.cinco.product.userdocumentation.codegen.Generate", "/src-gen/")
graphModel FeatureGraphModel {
	iconPath "icons/16/feature_16.png"
	diagramExtension "feat"
	containableElements(
		FeatureContainer,
		DocNode[1,*],
		PropertyContainer[1,*]
	)
	attr EString as modelName := "New Feature"
	@multiLine
	attr EString as documenation := "Lorem ipsum dolor et si met."
} 

@palette("Feature Inner Elements")
@icon("icons/16/start_16.png")
node Start {
	style startNode
	outgoingEdges (Edge[1,1])
}

@palette("Feature Inner Elements")
@icon("icons/16/stop_16.png")
node Stop {
	style stop
	incomingEdges (Edge[1,*])
}

@palette("Feature Inner Elements")
@icon("icons/16/container_16.png")
container FeatureContainer {
	style featureContainer("${title}")
	containableElements(
		Start[1,1],
		Stop[1,1],
		DocNode[1,*]
	)
	attr EString as title := "New Feature"
	@multiLine
	attr EString as documentation := "This feature is about ..."
}
 
@doubleClickAction("info.scce.cinco.product.userdocumentation.action.DocNodeOpenSubmodel")
node DocNode{
	style docNode("${mgl.modelName}")
	prime docMgl::DocGraphModel as mgl
	attr EBoolean as createScreenshots := true
	// FIXME: createScreenshots false disables 
	incomingEdges (*[1,*])
	outgoingEdges (Edge[1,*])
}

//###################################################################
//                                                                  #
//  Following elements were'nt specified in the thesis description, #
//  They have been added only for convenience purposes.             #
//                                                                  #
//###################################################################

@icon("icons/16/container_16.png")
@palette("Selenium Properties")
container PropertyContainer {
	style propertyContainer("${title}")
	containableElements(
		Property[0,*],
		WebDriver[1,1],
		Username,
		Email,
		Password
	)
	attr EString as title := "Selenium Properties"
}

/* configuration node*/
@palette("Selenium Properties")
@icon("icons/16/gear_16.png")
node Property{
	style property("${name}: ", "${value}")
	attr EString as name := "key"
	attr EString as value := "value"
}

/* 
 * The Selenium WebDriver that will be used
 * to manipulate the web browser.
 */
@palette("Selenium Properties")
@icon("icons/16/domain_16.png")
node WebDriver{
	style property("Driver: ","${name}")
	attr Browsers as name := "FIREFOX"
	attr EString as path := "/home/user/WebDriver/bin/geckodriver"
}

/* configuration node*/
@palette("User Login Properties")
@icon("icons/16/gear_16.png")
node Username{
	style property("Username: ", "${value}")
	attr EString as value := "john"
}

/* configuration node*/
@palette("User Login Properties")
@icon("icons/16/gear_16.png")
node Password{
	style property("Password: ", "${value}")
	attr EString as value := "pwd"
}

/* configuration node*/
@palette("User Login Properties")
@icon("icons/16/gear_16.png")
node Email{
	style property("Email: ", "${value}")
	attr EString as value := "j.doe@example.com"
}

enum Browsers {
	CHROME	
	EDGE	
	FIREFOX	
	IE	
	INTERNET_EXPLORER	
	SAFARI
}

edge Edge {
	style simpleArrow
}
