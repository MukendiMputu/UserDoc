import "model/Doc.mgl" as docMgl
id info.scce.cinco.product.features.main
stylePath "model/Feature.style"

@primeviewer
@generatable("info.scce.cinco.product.userdocumentation.codegen.Generate", "/src-gen/")
graphModel FeatureGraphModel {
	iconPath "icons/16/feature_16.png"
	diagramExtension "feat"
	containableElements(
		StartNode,
		EndNode,
		FeatureContainer,
		PropertyContainer,
		DocNode
	)
	attr EString as modelName := "Feature"
}

@icon("icons/16/start_16.png")
node StartNode {
	style StartNode
	outgoingEdges (*[1,1])
}

@icon("icons/16/stop_16.png")
node EndNode{
	style EndNode
	incomingEdges ({Edge,LabeledEdge}[1,*])
}

@icon("icons/16/container_16.png")
container FeatureContainer {
	style featureContainer("${title}")
	containableElements(DocNode[1,*])
	attr EString as title := ""
	incomingEdges (*[1,*])
	outgoingEdges ({Edge,LabeledEdge}[1,*])
}

@icon("icons/16/container_16.png")
@palette("Selenium Properties")
container PropertyContainer {
	style propertyContainer("${title}")
	containableElements(
		Property[1,*], 
		BaseURL[1,1],
		Browser[1,1],
		Domain[1,1],
		Username,
		Email,
		Password
	)
	attr EString as title := "Properties"
}

/* configuration node*/
@palette("Selenium Properties")
@icon("icons/16/gear_16.png")
node Property{
	style property("${name}: ", "${value}")
	attr EString as name := "key"
	attr EString as value := "value"
}

/* Basic URL node, which will be called in the Selenium script*/
@palette("Selenium Properties")
@icon("icons/16/url_16.png")
node BaseURL {
	style url("URL: ${content}")
	attr EString as content := "http://localhost"
}

/* The Domain node is suppose to contain
 * the site's reverse domain for defining packages;
 * this node might be reference in other MGLs.
 */
@palette("Selenium Properties")
@icon("icons/16/domain_16.png")
node Domain{
	style url("Reverse domain: ${content}")
	attr EString as content := "com.example"
}

/* configuration node*/
@palette("Selenium Properties")
@icon("icons/16/gear_16.png")
node Username{
	style property("Username: ", "${value}")
	attr EString as value := "john"
}

/* configuration node*/
@palette("Selenium Properties")
@icon("icons/16/gear_16.png")
node Password{
	style property("Password: ", "${value}")
	attr EString as value := "pwd"
}

/* configuration node*/
@palette("Selenium Properties")
@icon("icons/16/gear_16.png")
node Email{
	style property("Email: ", "${value}")
	attr EString as value := "j.doe@example.com"
}

/* configuration node*/
@palette("Selenium Properties")
@icon("icons/16/gear_16.png")
node Browser{
	style property("Browser: ", "${name}")
	attr Browsers as name := "firefox"
}

enum Browsers {
	firefox chrome Edge safari ie opera
}

@doubleClickAction("info.scce.cinco.product.userdocumentation.action.DocNodeOpenSubmodel")
node DocNode{
	style docNode("${mgl.modelName}")
	prime docMgl::DocGraphModel as mgl
	attr EBoolean as createScreenshots := true
	incomingEdges (*[1,*])
	outgoingEdges ({Edge,LabeledEdge}[1,*])
}

edge Edge {
	style simpleArrow
}

edge LabeledEdge {
	style labeledArrow("${label}")
	attr EString as label
}